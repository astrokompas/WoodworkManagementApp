<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">


    <!-- Repeat Button -->
    <Style x:Key="RepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window Control Button -->
    <Style x:Key="WindowControlButton" TargetType="Button">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="border"
                      Background="{TemplateBinding Background}"
                      UseLayoutRounding="True"
                      SnapsToDevicePixels="True">
                        <Border Width="16"
                            Height="16"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Image Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                               Stretch="Uniform"
                               UseLayoutRounding="True"
                               SnapsToDevicePixels="True"
                               RenderOptions.BitmapScalingMode="HighQuality"
                               RenderOptions.EdgeMode="Aliased"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#346751"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- NavButton -->
    <Style x:Key="NavIconButton" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"
							Background="Transparent"
							Height="120"
							BorderThickness="0">
                        <Grid>
                            <Border x:Name="indicator"
									Width="6"
									HorizontalAlignment="Left"
									Background="Transparent"/>
                            <ContentPresenter HorizontalAlignment="Center"
											VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#346751"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#346751"/>
                            <Setter TargetName="indicator" Property="Background" Value="#346751"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default Hyperlink Underline -->
    <Style x:Key="Hyperlink" TargetType="Hyperlink">
        <Setter Property="TextDecorations">
            <Setter.Value>
                <TextDecorationCollection>
                    <TextDecoration Location="Underline" 
                                PenOffset="0" 
                                PenThicknessUnit="FontRenderingEmSize">
                        <TextDecoration.Pen>
                            <Pen Brush="White" Thickness="0.1" />
                        </TextDecoration.Pen>
                    </TextDecoration>
                </TextDecorationCollection>
            </Setter.Value>
        </Setter>

        <!-- Hover -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations">
                    <Setter.Value>
                        <TextDecorationCollection>
                            <TextDecoration Location="Underline" 
                                        PenOffset="0" 
                                        PenThicknessUnit="FontRenderingEmSize">
                                <TextDecoration.Pen>
                                    <Pen Brush="#346751" Thickness="0.1" />
                                </TextDecoration.Pen>
                            </TextDecoration>
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollBar Thumb -->
    <Style x:Key="ScrollBarThumb" TargetType="Thumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle Fill="#346751"
                          RadiusX="4" 
                          RadiusY="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar -->
    <Style x:Key="ScrollBar" TargetType="ScrollBar">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="#383838"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Border Background="{TemplateBinding Background}" 
                        CornerRadius="4">
                        <Track Name="PART_Track" 
                          IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource RepeatButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource RepeatButton}"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollViewer -->
    <Style x:Key="ScrollViewer" TargetType="ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="PanningMode" Value="VerticalOnly"/>
        <Setter Property="ScrollViewer.PanningDeceleration" Value="0.003"/>
        <Setter Property="ScrollViewer.PanningRatio" Value="0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter Grid.Column="0" 
                                          CanContentScroll="{TemplateBinding CanContentScroll}"/>
                        <ScrollBar Name="PART_VerticalScrollBar"
                             Grid.Column="2" 
                             Style="{StaticResource ScrollBar}"
                             Value="{TemplateBinding VerticalOffset}"
                             Maximum="{TemplateBinding ScrollableHeight}"
                             ViewportSize="{TemplateBinding ViewportHeight}"
                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SearchBox Container -->
    <Style x:Key="SearchBoxContainer" TargetType="Grid">
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Height" Value="35"/>
    </Style>

    <!-- Action Button -->
    <Style x:Key="ActionButton" TargetType="Button">
        <Setter Property="Background" Value="#346751"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#5A9E85"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Move Button -->
    <Style x:Key="MoveButton" TargetType="Button">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Background" Value="#346751"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2A543F"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Product Card -->
    <Style x:Key="ProductCard" TargetType="Border">
        <Setter Property="Background" Value="#D7CFA0"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" 
                             ShadowDepth="2" 
                             Opacity="0.2"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Search Box -->
    <Style x:Key="SearchBox" TargetType="TextBox">
        <Setter Property="Background" Value="#D7CFA0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5,8"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Product Name -->
    <Style x:Key="ProductName" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#262319"/>
    </Style>

    <!-- Product Label -->
    <Style x:Key="ProductLabel" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#666666"/>
    </Style>

    <!-- Product Value -->
    <Style x:Key="ProductValue" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#262319"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>

    <!-- Input Label -->
    <Style x:Key="InputLabel" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#262319"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <!-- Input Box -->
    <Style x:Key="InputBox" TargetType="TextBox">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#262319"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#262319"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#262319"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Combo Box -->
    <Style x:Key="ComboBox" TargetType="ComboBox">
        <Setter Property="Background" Value="#D7CFA0"/>
        <Setter Property="Foreground" Value="#262319"/>
        <Setter Property="BorderBrush" Value="#346751"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="30"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Grid.Column="0"
                                                Content="{TemplateBinding Content}"
                                                HorizontalAlignment="Left"
                                                Margin="10,0,0,0"
                                                VerticalAlignment="Center"/>
                                            <Path Grid.Column="1"
                                              Width="10"
                                              Height="5"
                                              Data="M 0,0 L 5,5 L 10,0"
                                              Fill="#625424"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <ContentPresenter
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        Margin="10,0,0,0"/>

                        <Popup Name="Popup"
                           AllowsTransparency="True"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           PopupAnimation="Slide"
                           PlacementTarget="{Binding ElementName=ToggleButton}">
                            <Grid Name="DropDown"
                              Background="{TemplateBinding Background}"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="4">
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Combo Box Item -->
    <Style x:Key="ComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                        Padding="10,5"
                        Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#346751"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#346751"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Cart Button -->
    <Style x:Key="CartButton" TargetType="Button" BasedOn="{StaticResource ActionButton}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="#346751"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#5A9E85"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Input Box With Placeholder -->
    <Style x:Key="InputBoxWithPlaceholder" TargetType="TextBox">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#625424"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <Grid>
                            <TextBlock x:Name="PlaceholderText"
                                 Text="{TemplateBinding Tag}"
                                 Foreground="#999999"
                                 Padding="{TemplateBinding Padding}"
                                 VerticalAlignment="Center"/>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                    Margin="0"
                                    VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Hidden"/>
                        </MultiTrigger>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="{x:Null}"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Hidden"/>
                        </MultiTrigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>